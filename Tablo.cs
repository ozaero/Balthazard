using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Balthazard
{
    internal class Tablo
    {
        public List<float> balthazardList = new List<float>();

        float toplam;

        public float Tablo2_3Ust(float oran)
        {
            float bellek = oran;
            oran /= 2;

            for (int i = 1; i <= bellek; i++)
                if (i % 5 == 0)
                    oran += 0.5f;

            return (float)Math.Ceiling(oran);
        }

        public float Tablo3_2Alt(float oran)
        {
            oran /= 2;

            return (float)Math.Ceiling(oran);
        }

        public float Balthazard(float oran)
        {
            float tasiyici, aktarici;
            toplam = 0;
            balthazardList.Add(oran);

            if (balthazardList.Count > 1)
            {
                tasiyici = 100 - balthazardList[0];
                aktarici = tasiyici * (balthazardList[1] / 100);
                toplam = aktarici + balthazardList[0];
            }
            if (balthazardList.Count > 2)
                for (int i = 2; i < balthazardList.Count; i++)
                {
                    toplam = (float)Math.Round(toplam, MidpointRounding.AwayFromZero);
                    tasiyici = 100 - toplam;
                    aktarici = tasiyici * (balthazardList[i] / 100);
                    toplam += aktarici;
                }

            return (float)Math.Round(toplam, MidpointRounding.AwayFromZero);
        }

        public float E_Cetveli(int oran, int yas)
        {
            #region E Cetveli

            float[,] e_CetvelTutucu = { { 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.1f, 1.1f, 1.1f, 1.1f, 1.1f, 1.1f, 1.1f, 1.1f, 1.2f }, { 1.2f, 1.2f, 1.2f, 1.3f, 1.3f, 1.3f, 1.3f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.1f, 2.1f, 2.1f, 2.1f, 2.2f, 2.2f, 2.2f, 2.2f, 2.3f, 2.3f, 2.3f }, { 2.1f, 2.1f, 2.1f, 2.2f, 2.2f, 2.3f, 2.3f, 2.3f, 3.0f, 3.0f, 3.0f, 3.1f, 3.1f, 3.1f, 3.2f, 3.2f, 3.3f, 3.3f, 3.3f, 4.0f, 4.0f, 4.0f, 4.1f }, { 3.0f, 3.0f, 3.1f, 3.1f, 3.2f, 3.2f, 3.3f, 3.3f, 4.0f, 4.0f, 4.0f, 4.1f, 4.1f, 4.2f, 4.2f, 4.3f, 4.3f, 5.0f, 5.0f, 5.1f, 5.1f, 5.2f, 5.2f }, { 3.3f, 3.3f, 4.0f, 4.0f, 4.1f, 4.2f, 4.2f, 4.3f, 4.3f, 5.0f, 5.1f, 5.1f, 5.2f, 5.2f, 5.3f, 6.0f, 6.0f, 6.1f, 6.1f, 6.2f, 6.2f, 6.3f, 7.0f }, { 4.2f, 4.2f, 4.3f, 5.0f, 5.1f, 5.1f, 5.2f, 5.3f, 5.3f, 6.0f, 6.1f, 6.1f, 6.2f, 6.3f, 6.3f, 7.0f, 7.1f, 7.2f, 7.2f, 7.3f, 8.0f, 8.0f, 8.1f }, { 5.1f, 5.2f, 5.2f, 5.3f, 6.0f, 6.1f, 6.2f, 6.2f, 6.3f, 7.0f, 7.1f, 7.2f, 7.2f, 7.3f, 8.0f, 8.1f, 8.2f, 8.2f, 8.3f, 9.0f, 9.1f, 9.2f, 9.2f }, { 6.0f, 6.1f, 6.2f, 6.3f, 6.3f, 7.0f, 7.1f, 7.2f, 8.0f, 8.0f, 8.1f, 8.2f, 8.3f, 9.0f, 9.1f, 9.1f, 9.2f, 9.3f, 10.1f, 10.1f, 10.2f, 10.3f, 11.0f }, { 6.3f, 7.0f, 7.1f, 7.2f, 7.3f, 8.0f, 8.1f, 8.2f, 8.3f, 9.0f, 9.1f, 9.2f, 9.3f, 10.0f, 10.1f, 10.2f, 10.3f, 11.0f, 11.1f, 11.2f, 11.3f, 12.0f, 12.1f }, { 7.2f, 7.3f, 8.0f, 8.1f, 8.2f, 9.0f, 9.1f, 9.2f, 9.3f, 10.0f, 10.1f, 10.2f, 10.3f, 11.0f, 11.2f, 11.3f, 12.0f, 12.1f, 12.2f, 12.3f, 13.0f, 13.1f, 13.2f }, { 8.1f, 8.2f, 9.0f, 9.1f, 9.2f, 9.3f, 10.0f, 10.2f, 10.3f, 11.0f, 11.1f, 11.2f, 12.0f, 12.1f, 12.2f, 12.3f, 13.0f, 13.2f, 13.3f, 14.0f, 14.1f, 14.2f, 15.0f }, { 9.0f, 9.2f, 9.3f, 10.0f, 10.2f, 10.3f, 11.0f, 11.1f, 11.3f, 12.0f, 12.1f, 12.3f, 13.0f, 13.1f, 13.3f, 14.0f, 14.1f, 14.2f, 15.0f, 15.2f, 15.2f, 16.0f, 16.0f }, { 9.3f, 10.1f, 10.2f, 11.0f, 11.1f, 11.2f, 12.0f, 12.1f, 12.3f, 13.0f, 13.1f, 13.3f, 14.0f, 14.2f, 14.3f, 15.0f, 15.2f, 16.0f, 16.0f, 16.2f, 17.0f, 17.0f, 17.2f }, { 10.3f, 11.0f, 11.2f, 11.3f, 12.1f, 12.2f, 13.0f, 13.1f, 13.1f, 14.0f, 14.1f, 14.3f, 15.0f, 15.2f, 16.0f, 16.0f, 16.2f, 17.0f, 17.2f, 17.2f, 18.0f, 18.2f, 19.0f }, { 11.2f, 11.3f, 12.1f, 12.3f, 13.0f, 13.2f, 13.3f, 14.1f, 14.2f, 15.0f, 15.2f, 16.0f, 16.0f, 16.2f, 17.0f, 17.2f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 19.2f, 20.0f }, { 12.1f, 12.3f, 13.0f, 13.2f, 14.0f, 14.1f, 15.0f, 15.0f, 15.2f, 16.0f, 16.2f, 17.0f, 17.0f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f }, { 13.0f, 13.2f, 14.0f, 14.2f, 15.0f, 15.2f, 15.2f, 16.0f, 16.2f, 17.0f, 17.2f, 18.0f, 18.2f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.0f, 22.2f }, { 14.0f, 14.1f, 15.0f, 15.2f, 15.2f, 16.0f, 16.2f, 17.0f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f }, { 14.3f, 15.0f, 15.2f, 16.0f, 16.2f, 17.0f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 23.2f, 24.0f, 24.2f, 25.0f }, { 15.2f, 16.0f, 16.2f, 17.0f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.0f, 26.2f }, { 16.2f, 17.0f, 17.2f, 18.0f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.0f, 26.2f, 27.0f, 27.2f }, { 17.0f, 18.0f, 18.2f, 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.0f, 27.0f, 27.2f, 28.0f, 28.2f, 29.0f }, { 18.0f, 18.2f, 19.0f, 19.2f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.2f, 27.0f, 27.2f, 28.0f, 28.2f, 29.0f, 29.2f, 30.0f }, { 19.0f, 19.2f, 20.0f, 20.2f, 21.0f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.0f, 27.0f, 27.2f, 28.0f, 28.2f, 29.0f, 29.2f, 30.0f, 30.2f, 31.2f }, { 20.0f, 20.2f, 21.0f, 21.2f, 22.0f, 22.2f, 23.2f, 24.0f, 24.2f, 25.0f, 25.2f, 26.0f, 26.2f, 27.2f, 28.0f, 28.2f, 29.0f, 29.2f, 30.0f, 31.0f, 31.2f, 32.0f, 32.2f }, { 20.2f, 21.2f, 22.0f, 22.2f, 23.0f, 23.2f, 24.0f, 25.0f, 25.2f, 26.0f, 26.2f, 27.0f, 28.0f, 28.2f, 29.0f, 29.2f, 30.0f, 30.2f, 31.2f, 32.0f, 32.2f, 33.0f, 33.2f }, { 21.2f, 22.0f, 23.0f, 23.2f, 24.0f, 24.2f, 25.0f, 26.0f, 26.2f, 27.0f, 27.2f, 28.0f, 29.0f, 29.2f, 30.0f, 30.2f, 31.0f, 32.0f, 32.2f, 33.0f, 33.2f, 34.2f, 35.0f }, { 22.2f, 23.0f, 23.2f, 24.2f, 25.0f, 25.2f, 26.0f, 27.0f, 27.2f, 28.0f, 28.2f, 29.0f, 30.0f, 30.2f, 31.0f, 31.2f, 32.2f, 33.0f, 33.2f, 34.0f, 35.0f, 35.2f, 36.0f }, { 23.2f, 24.0f, 24.2f, 25.0f, 26.0f, 26.2f, 27.0f, 27.2f, 28.2f, 29.0f, 29.2f, 30.2f, 31.0f, 31.2f, 32.0f, 33.0f, 33.2f, 34.0f, 34.2f, 35.2f, 36.0f, 36.2f, 37.0f }, { 24.0f, 25.0f, 25.2f, 26.0f, 27.0f, 27.2f, 28.0f, 28.2f, 29.2f, 30.0f, 30.2f, 31.2f, 32.0f, 32.2f, 33.0f, 34.0f, 34.2f, 35.0f, 36.0f, 36.2f, 37.0f, 38.0f, 38.2f }, { 25.0f, 25.2f, 26.2f, 27.0f, 27.2f, 28.2f, 29.0f, 29.2f, 30.2f, 31.0f, 31.2f, 32.2f, 33.0f, 33.2f, 34.2f, 35.0f, 35.2f, 36.2f, 37.0f, 37.2f, 38.0f, 39.0f, 39.2f }, { 26.0f, 26.0f, 27.2f, 28.0f, 28.2f, 29.2f, 30.0f, 30.2f, 31.2f, 32.0f, 32.2f, 33.2f, 34.0f, 34.2f, 35.2f, 36.0f, 36.2f, 37.2f, 38.0f, 38.2f, 39.2f, 40.0f, 40.2f }, { 27.0f, 27.2f, 28.0f, 28.0f, 29.2f, 30.2f, 31.0f, 31.2f, 32.2f, 33.0f, 33.2f, 34.2f, 35.0f, 35.2f, 36.2f, 37.0f, 38.0f, 38.2f, 39.0f, 40.0f, 40.2f, 41.0f, 42.0f }, { 28.0f, 28.2f, 29.0f, 30.0f, 30.2f, 31.0f, 32.0f, 32.2f, 33.2f, 34.0f, 34.2f, 35.2f, 36.0f, 37.0f, 37.2f, 38.0f, 39.0f, 39.2f, 40.0f, 41.0f, 41.2f, 42.2f, 43.0f }, { 28.2f, 29.2f, 30.0f, 31.0f, 31.2f, 32.0f, 33.0f, 33.2f, 34.2f, 35.0f, 35.2f, 36.2f, 37.0f, 38.0f, 38.2f, 39.0f, 40.0f, 40.2f, 41.2f, 42.0f, 42.2f, 43.2f, 44.0f }, { 29.2f, 30.2f, 31.0f, 31.2f, 32.2f, 33.0f, 34.0f, 34.2f, 35.2f, 36.0f, 36.2f, 37.2f, 38.0f, 39.0f, 39.2f, 40.2f, 41.0f, 41.2f, 42.2f, 43.0f, 44.0f, 44.2f, 45.0f }, { 30.2f, 31.2f, 32.0f, 32.2f, 33.2f, 34.0f, 35.0f, 35.2f, 36.2f, 37.0f, 37.2f, 38.2f, 39.0f, 40.0f, 40.2f, 41.2f, 42.0f, 42.2f, 43.2f, 44.0f, 45.0f, 45.2f, 46.2f }, { 31.3f, 32.0f, 33.0f, 33.2f, 34.2f, 35.0f, 36.0f, 36.2f, 37.2f, 38.0f, 38.2f, 39.2f, 40.0f, 41.0f, 41.2f, 42.2f, 43.0f, 44.0f, 44.2f, 45.2f, 46.0f, 46.2f, 47.2f }, { 32.3f, 33.0f, 34.0f, 34.2f, 35.2f, 36.0f, 37.0f, 37.2f, 38.2f, 39.0f, 39.2f, 40.2f, 41.0f, 42.0f, 42.2f, 43.2f, 44.0f, 45.0f, 45.2f, 46.2f, 47.0f, 48.0f, 48.2f }, { 33.2f, 34.0f, 35.0f, 35.2f, 36.2f, 37.0f, 38.0f, 38.2f, 39.2f, 40.0f, 40.2f, 41.2f, 42.0f, 43.0f, 43.2f, 44.2f, 45.0f, 46.0f, 46.2f, 47.2f, 48.0f, 49.0f, 50.0f }, { 34.2f, 35.0f, 36.0f, 36.2f, 37.2f, 38.0f, 39.0f, 39.2f, 40.2f, 41.0f, 41.2f, 42.2f, 43.0f, 44.0f, 44.2f, 45.2f, 46.0f, 47.0f, 47.2f, 48.2f, 49.0f, 50.0f, 51.0f }, { 35.2f, 36.0f, 37.0f, 37.2f, 38.2f, 39.0f, 40.0f, 40.2f, 41.2f, 42.0f, 43.0f, 43.2f, 44.2f, 45.0f, 46.0f, 46.2f, 47.2f, 48.0f, 49.0f, 50.0f, 50.0f, 51.0f, 52.0f }, { 36.0f, 37.0f, 37.2f, 38.2f, 39.0f, 40.0f, 41.2f, 41.2f, 42.0f, 43.0f, 44.0f, 44.2f, 45.2f, 46.0f, 47.0f, 47.2f, 48.2f, 49.0f, 50.0f, 51.0f, 51.0f, 52.0f, 53.0f }, { 37.0f, 38.0f, 38.2f, 39.2f, 40.0f, 41.0f, 41.2f, 42.2f, 43.0f, 44.0f, 45.0f, 45.2f, 46.2f, 47.0f, 48.0f, 48.2f, 49.2f, 50.0f, 51.0f, 52.0f, 52.0f, 53.0f, 54.0f }, { 38.0f, 39.0f, 39.2f, 40.2f, 41.0f, 42.0f, 42.2f, 43.2f, 44.0f, 45.0f, 46.0f, 46.2f, 47.2f, 48.0f, 49.0f, 50.0f, 50.0f, 51.0f, 52.0f, 53.0f, 53.0f, 54.0f, 55.0f }, { 39.0f, 40.0f, 40.2f, 41.2f, 42.0f, 43.0f, 43.2f, 44.2f, 45.0f, 46.0f, 47.0f, 47.2f, 48.2f, 49.0f, 50.0f, 51.0f, 51.0f, 52.0f, 53.0f, 54.0f, 54.0f, 55.0f, 56.0f }, { 40.0f, 41.0f, 41.2f, 42.2f, 43.0f, 44.0f, 44.2f, 45.2f, 46.0f, 47.0f, 48.0f, 48.2f, 49.2f, 50.0f, 51.0f, 52.0f, 52.0f, 53.0f, 54.0f, 55.0f, 55.0f, 56.0f, 57.0f }, { 41.0f, 42.0f, 42.2f, 43.2f, 44.0f, 45.0f, 45.2f, 46.2f, 47.0f, 48.0f, 49.0f, 50.0f, 50.0f, 51.0f, 52.0f, 53.0f, 53.0f, 54.0f, 55.0f, 56.0f, 56.0f, 57.0f, 58.0f }, { 42.0f, 43.0f, 43.2f, 44.2f, 45.0f, 46.0f, 46.2f, 47.2f, 48.0f, 49.0f, 50.0f, 51.0f, 51.0f, 52.0f, 53.0f, 54.0f, 54.0f, 55.0f, 56.0f, 57.0f, 57.0f, 58.0f, 59.0f }, { 43.0f, 44.0f, 44.2f, 45.2f, 46.0f, 47.0f, 47.2f, 48.2f, 49.0f, 50.0f, 51.0f, 52.0f, 52.0f, 53.0f, 54.0f, 55.0f, 55.0f, 56.0f, 57.0f, 58.0f, 58.0f, 59.0f, 60.0f }, { 44.0f, 45.0f, 45.2f, 46.2f, 47.0f, 48.0f, 48.2f, 49.2f, 50.0f, 51.0f, 52.0f, 53.0f, 53.0f, 54.0f, 55.0f, 56.0f, 56.0f, 57.0f, 58.0f, 59.0f, 59.0f, 60.0f, 61.0f }, { 45.0f, 46.0f, 46.2f, 47.2f, 48.0f, 49.0f, 50.0f, 50.0f, 51.0f, 52.0f, 53.0f, 54.0f, 54.0f, 55.0f, 56.0f, 57.0f, 57.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f }, { 46.0f, 47.0f, 47.2f, 48.2f, 49.0f, 50.0f, 51.0f, 51.0f, 52.0f, 53.0f, 54.0f, 55.0f, 55.0f, 56.0f, 57.0f, 58.0f, 58.0f, 59.0f, 60.0f, 61.0f, 61.0f, 62.0f, 63.0f }, { 47.0f, 48.0f, 48.2f, 49.2f, 50.0f, 51.0f, 52.0f, 52.0f, 53.0f, 54.0f, 55.0f, 56.0f, 56.0f, 57.0f, 58.0f, 59.0f, 59.0f, 60.0f, 61.0f, 62.0f, 62.0f, 63.0f, 64.0f }, { 48.0f, 49.0f, 50.0f, 50.0f, 51.0f, 52.0f, 53.0f, 53.0f, 54.0f, 55.0f, 56.0f, 57.0f, 57.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f }, { 49.0f, 50.0f, 51.0f, 51.0f, 52.0f, 53.0f, 54.0f, 54.0f, 55.0f, 56.0f, 57.0f, 58.0f, 58.0f, 59.0f, 60.0f, 61.0f, 61.0f, 62.0f, 63.0f, 64.0f, 64.0f, 65.0f, 66.0f }, { 50.0f, 51.0f, 52.0f, 52.0f, 53.0f, 54.0f, 55.0f, 55.0f, 56.0f, 57.0f, 58.0f, 59.0f, 59.0f, 60.0f, 61.0f, 62.0f, 62.0f, 63.0f, 64.0f, 65.0f, 65.0f, 66.0f, 67.0f }, { 51.0f, 52.0f, 53.0f, 54.0f, 54.0f, 55.0f, 56.0f, 57.0f, 57.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f }, { 52.0f, 53.0f, 54.0f, 55.0f, 55.0f, 56.0f, 57.0f, 58.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f, 69.0f }, { 53.0f, 54.0f, 55.0f, 56.0f, 56.0f, 57.0f, 58.0f, 59.0f, 59.0f, 60.0f, 61.0f, 61.0f, 62.0f, 63.0f, 64.0f, 64.0f, 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 69.0f, 70.0f }, { 54.0f, 55.0f, 56.0f, 57.0f, 57.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f, 62.0f, 63.0f, 64.0f, 65.0f, 65.0f, 66.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 71.0f }, { 55.0f, 56.0f, 57.0f, 58.0f, 58.0f, 59.0f, 60.0f, 61.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 71.0f }, { 57.0f, 57.0f, 58.0f, 59.0f, 59.0f, 60.0f, 61.0f, 62.0f, 62.0f, 63.0f, 64.0f, 64.0f, 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 72.0f, 72.0f }, { 58.0f, 58.0f, 59.0f, 60.0f, 60.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 65.0f, 66.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 70.0f, 71.0f, 72.0f, 73.0f, 73.0f }, { 59.0f, 59.0f, 60.0f, 61.0f, 62.0f, 62.0f, 63.0f, 64.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 71.0f, 72.0f, 73.0f, 73.0f, 74.0f }, { 60.0f, 60.0f, 61.0f, 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 74.0f, 74.0f, 75.0f }, { 61.0f, 62.0f, 62.0f, 63.0f, 64.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 74.0f, 74.0f, 75.0f, 76.0f }, { 62.0f, 63.0f, 63.0f, 64.0f, 65.0f, 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 71.0f, 72.0f, 73.0f, 73.0f, 74.0f, 75.0f, 75.0f, 76.0f, 77.0f }, { 63.0f, 64.0f, 64.0f, 65.0f, 66.0f, 66.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 74.0f, 74.0f, 75.0f, 76.0f, 76.0f, 77.0f, 78.0f }, { 64.0f, 65.0f, 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 71.0f, 72.0f, 73.0f, 73.0f, 74.0f, 75.0f, 75.0f, 76.0f, 76.0f, 77.0f, 78.0f, 78.0f }, { 65.0f, 66.0f, 67.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 74.0f, 74.0f, 75.0f, 75.0f, 76.0f, 77.0f, 77.0f, 78.0f, 79.0f, 79.0f }, { 66.0f, 67.0f, 68.0f, 68.0f, 69.0f, 70.0f, 70.0f, 71.0f, 71.0f, 72.0f, 73.0f, 73.0f, 74.0f, 74.0f, 75.0f, 76.0f, 76.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f }, { 68.0f, 68.0f, 69.0f, 69.0f, 70.0f, 71.0f, 71.0f, 72.0f, 72.0f, 73.0f, 74.0f, 74.0f, 75.0f, 75.0f, 76.0f, 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 80.0f, 80.0f, 81.0f }, { 69.0f, 69.0f, 70.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 73.0f, 74.0f, 75.0f, 75.0f, 76.0f, 76.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 81.0f, 81.0f, 82.0f }, { 70.0f, 70.0f, 71.0f, 72.0f, 72.0f, 73.0f, 73.0f, 74.0f, 74.0f, 75.0f, 76.0f, 76.0f, 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 83.0f }, { 71.0f, 72.0f, 72.0f, 73.0f, 73.0f, 74.0f, 74.0f, 75.0f, 75.0f, 76.0f, 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f }, { 72.0f, 73.0f, 73.0f, 74.0f, 74.0f, 75.0f, 75.0f, 76.0f, 76.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 84.0f, 84.0f }, { 73.0f, 74.0f, 74.0f, 75.0f, 75.0f, 76.0f, 76.0f, 77.0f, 77.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f }, { 74.0f, 75.0f, 75.0f, 76.0f, 76.0f, 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f }, { 76.0f, 76.0f, 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f, 86.0f }, { 77.0f, 77.0f, 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f, 86.0f, 87.0f, 87.0f }, { 78.0f, 78.0f, 79.0f, 79.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f, 86.0f, 87.0f, 87.0f, 87.0f, 88.0f }, { 79.0f, 80.0f, 80.0f, 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 83.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f, 86.0f, 86.0f, 87.0f, 87.0f, 88.0f, 88.0f, 89.0f }, { 80.0f, 81.0f, 81.0f, 82.0f, 82.0f, 82.0f, 83.0f, 83.0f, 84.0f, 84.0f, 84.0f, 85.0f, 85.0f, 86.0f, 86.0f, 86.0f, 87.0f, 87.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f }, { 82.0f, 82.0f, 82.0f, 83.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 85.0f, 86.0f, 86.0f, 87.0f, 87.0f, 87.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f }, { 83.0f, 83.0f, 83.0f, 84.0f, 84.0f, 85.0f, 85.0f, 85.0f, 86.0f, 86.0f, 86.0f, 87.0f, 87.0f, 87.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 91.0f }, { 84.0f, 84.0f, 85.0f, 85.0f, 85.0f, 86.0f, 86.0f, 86.0f, 87.0f, 87.0f, 87.0f, 88.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 92.0f }, { 85.0f, 85.0f, 86.0f, 86.0f, 86.0f, 87.0f, 87.0f, 87.0f, 88.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 91.0f, 92.0f, 92.0f, 92.0f }, { 86.0f, 87.0f, 87.0f, 87.0f, 87.0f, 88.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 91.0f, 91.0f, 92.0f, 92.0f, 92.0f, 93.0f, 93.0f }, { 88.0f, 88.0f, 88.0f, 88.0f, 89.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 91.0f, 91.0f, 92.0f, 92.0f, 92.0f, 92.0f, 93.0f, 93.0f, 93.0f, 93.0f }, { 89.0f, 89.0f, 89.0f, 89.0f, 90.0f, 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 91.0f, 92.0f, 92.0f, 92.0f, 92.0f, 93.0f, 93.0f, 93.0f, 93.0f, 94.0f, 94.0f, 94.0f, 94.0f }, { 90.0f, 90.0f, 90.0f, 91.0f, 91.0f, 91.0f, 92.0f, 91.0f, 92.0f, 92.0f, 92.0f, 92.0f, 93.0f, 93.0f, 93.0f, 93.0f, 94.0f, 94.0f, 94.0f, 94.0f, 94.0f, 95.0f, 95.0f }, { 91.0f, 91.0f, 92.0f, 92.0f, 92.0f, 92.0f, 93.0f, 92.0f, 93.0f, 93.0f, 93.0f, 93.0f, 94.0f, 94.0f, 94.0f, 94.0f, 94.0f, 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 96.0f }, { 92.0f, 93.0f, 93.0f, 93.0f, 93.0f, 93.0f, 93.0f, 94.0f, 94.0f, 94.0f, 94.0f, 94.0f, 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f }, { 94.0f, 94.0f, 94.0f, 94.0f, 94.0f, 94.0f, 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 97.0f, 97.0f, 97.0f }, { 95.0f, 95.0f, 95.0f, 95.0f, 95.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 96.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 98.0f }, { 96.0f, 96.0f, 96.0f, 96.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 97.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f }, { 97.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 98.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f }, { 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f, 99.0f }, { 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f, 100.0f } };

            #endregion

            int yasTutucu;

            oran -= 1;
            if (yas <= 21)
                yas = 0;
            else
            {
                yasTutucu = yas - 21;
                yas = 1;
                for (int i = 1; i < yasTutucu; i++)
                {
                    if (yas == 22)
                        break;
                    if (i % 2 == 0)
                        yas++;
                }
            }

            return e_CetvelTutucu[oran, yas];
        }
    }
}
